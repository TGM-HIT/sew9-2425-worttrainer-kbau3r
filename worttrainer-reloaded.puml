@startuml
'title: Worttrainer Reloaded - kbauer'

class Model {
  -dataList : List<Data>
  -auswahl : Data
  -persistenceStrategy : PersistenceStrategy
  +getDataList() : List<Data>
  +setDataList(List<Data>) : void
  +getRandomData() : Data
  +getSpecificData(int) : Data
  +addData(Data) : void
  +removeData(Data) : void
  +getAuswahl() : Data
  +clearPersistence() : void
  +addStatistics() : void
  +loadStatistics() : void
  +getStatistics() : Statistics
}

class Data {
  -name : String
  -url : String
  +addName(String) : void
  +checkName(String) : boolean
  +addUrl(String) : boolean
  +addUrl(URL) : void
  +checkUrl(String) : boolean
  +getUrl() : URL
  +getName() : String
  +toString() : String
  +equals(Object) : boolean
}

class Statistics {
  - int correctAttempts
  - int wrongAttempts
  + Statistics()
  + Statistics(int, int)
  + int getCorrectAttempts()
  + int getWrongAttempts()
  + void update(boolean)
  + String getStatistics()
}

class View {
  + showData(Data) : void
  + getInput() : String
  + displayStatistics(Statistics) : void
  + showMessage(String) : void
  + displayError(String) : void
}

class Controller {
  -model : Model
  -view : View
  +Controller(Model, View)
  +startTraining() : void
  +checkAnswer(String) : void
  +endTraining() : void
}

class PersistenceInterface {
  + saveData(List<Data>, String) : void
  + loadData(String) : List<Data>
  + saveStatistics(Statistics, String) : void
  + loadStatistics(String) : Statistics
  + clear(String) : void
}

class JsonPersistence {
  + saveData(List<Data>, String) : void
  + loadData(String) : List<Data>
  + saveStatistics(Statistics, String) : void
  + loadStatistics(String) : Statistics
  + clear(String) : void
}

Controller --> "1" Model : model
Controller --> "1" View : view
Model "1" --> "*" Data : dataList
Model "1" o-- "1" Statistics : statistics
Model --> "1" PersistenceInterface : persistenceInterface
PersistenceInterface <|-- JsonPersistence

@enduml
